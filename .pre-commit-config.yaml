# Pre-commit hooks for Duotopia
# 安裝: pip install pre-commit && pre-commit install
#
# ⚠️ 重要：這些檢查會在每次 commit 前自動執行
# 如果任何檢查失敗，commit 會被阻止
# 使用 --no-verify 跳過檢查是被禁止的（見 CLAUDE.md）

repos:
  # Python formatting & linting - 使用 requirements.txt 版本
  - repo: local
    hooks:
      - id: black
        name: black
        entry: black
        language: system  # 使用 pip 安裝的版本 (requirements.txt)
        types: [python]
        files: ^backend/.*\.py$

      - id: flake8
        name: flake8
        entry: flake8
        language: system  # 使用 pip 安裝的版本 (requirements.txt)
        types: [python]
        args: ['--max-line-length=120', '--ignore=E203,W503']
        files: ^backend/.*\.py$

  # TypeScript/JavaScript
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: bash -c 'cd frontend && npx eslint --ext ts,tsx src --max-warnings 0'
        language: system
        files: frontend/src/.*\.(ts|tsx)$
        pass_filenames: false

      - id: typescript
        name: TypeScript Check
        entry: bash -c 'cd frontend && npx tsc --noEmit'
        language: system
        files: frontend/src/.*\.(ts|tsx)$
        pass_filenames: false

  # Custom hooks
  - repo: local
    hooks:
      - id: alembic-check
        name: Check for missing Alembic migrations
        entry: bash -c 'cd backend && if command -v alembic &> /dev/null; then alembic check || (echo "⚠️ Model changes detected! Run alembic revision --autogenerate -m your_message" && exit 1); fi'
        language: system
        pass_filenames: false
        always_run: true
        files: ^backend/models\.py$

      - id: check-migration-format
        name: Check Alembic migration file format
        entry: python backend/hooks/check_migration_format.py
        language: python
        files: ^backend/alembic/versions/.*\.py$
        pass_filenames: true
      - id: prevent-hardcoded-urls
        name: Prevent hardcoded localhost URLs
        entry: bash -c 'if grep -r "localhost:[0-9]" frontend/src/ 2>/dev/null; then echo "Error - Hardcoded localhost URL found - Use environment variables"; exit 1; fi'
        language: system
        files: ^frontend/src/.*\.(ts|tsx|js|jsx)$
        pass_filenames: false

      - id: prevent-db-files
        name: Prevent database files from being committed
        entry: bash -c 'git diff --cached --name-only | grep -q "\.db$" && echo "Error - Database files detected - Use git reset to remove .db files" && exit 1 || exit 0'
        language: system
        pass_filenames: false
        always_run: true

      - id: check-test-file-location
        name: Check test files are in correct location
        entry: bash -c 'git diff --cached --name-only | grep -q "backend/scripts/test_.*\.py" && echo "Warning - Test files should be in backend/tests/ not scripts/" && exit 1 || exit 0'
        language: system
        pass_filenames: false
        always_run: true

  # 🔒 Secret Detection - CRITICAL SECURITY
  # TODO: Re-enable detect-secrets after fixing baseline compatibility
  # - repo: https://github.com/Yelp/detect-secrets
  #   rev: v1.4.0
  #   hooks:
  #     - id: detect-secrets
  #       args: ['--baseline', '.secrets.baseline']
  #       exclude: package-lock\.json

  # 🔒 SECURITY CHECKS - CRITICAL
  - repo: local
    hooks:
      - id: check-credentials
        name: Check for hardcoded credentials
        entry: ./.github/hooks/security/check-credentials.sh
        language: script
        pass_filenames: false

      - id: check-database-urls
        name: Check for exposed database URLs
        entry: ./.github/hooks/security/check-database-urls.sh
        language: script
        pass_filenames: false

      - id: check-api-keys
        name: Check for exposed API keys
        entry: ./.github/hooks/security/check-api-keys.sh
        language: script
        pass_filenames: false

      - id: check-jwt-secrets
        name: Check for exposed JWT secrets
        entry: ./.github/hooks/security/check-jwt-secrets.sh
        language: script
        pass_filenames: false

      - id: check-env-files
        name: Prevent .env files from being committed
        entry: ./.github/hooks/security/check-env-files.sh
        language: script
        pass_filenames: false

      - id: security-audit
        name: Comprehensive security audit
        entry: ./.github/hooks/security/security-audit.sh
        language: script
        pass_filenames: false

  # Prevent large files
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-json
        exclude: tsconfig.*\.json$
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-merge-conflict
