# Pre-commit hooks - AI-assisted Solo Development
# 🎯 Philosophy: 只擋會影響 Production 的錯誤，其他都是摩擦
#
# 安裝:
#   pip install pre-commit
#   pre-commit install --hook-type pre-commit --hook-type pre-push
#
# Commit 階段檢查 (總耗時 < 10 秒):
# ✅ TypeScript 編譯 - 防止 runtime 錯誤
# ✅ Import patterns - 防止 UnboundLocalError（會炸 prod！）
# ✅ 安全檢查 - 防止洩密
# ✅ 基本檔案檢查 - 防止 .db/.env 被 commit
#
# Push 階段格式化 (自動修復):
# 🎨 Black - Python 格式化
# 🎨 Autoflake - 移除未使用的 imports
# 🎨 Prettier - Frontend 格式化
# 🎨 ESLint --fix - Frontend 自動修復

repos:
  # ==========================================
  # 🔴 CRITICAL: 會導致 Runtime Error
  # ==========================================
  - repo: local
    hooks:
      # TypeScript 編譯檢查（5-8 秒）
      - id: typescript
        name: TypeScript Check
        entry: bash -c 'cd frontend && npx tsc --noEmit'
        language: system
        files: frontend/src/.*\.(ts|tsx)$
        pass_filenames: false

      # Python Import 檢查（< 1 秒）
      # 防止 UnboundLocalError 和 circular imports
      - id: check-import-patterns
        name: Check for problematic Python import patterns
        entry: python backend/hooks/check_import_patterns.py
        language: system
        types: [python]
        files: ^backend/.*\.py$
        pass_filenames: true

  # ==========================================
  # 🔒 CRITICAL: 安全檢查
  # ==========================================
  - repo: local
    hooks:
      - id: check-credentials
        name: Check for hardcoded credentials
        entry: ./.github/hooks/security/check-credentials.sh
        language: script
        pass_filenames: false

      - id: check-database-urls
        name: Check for exposed database URLs
        entry: ./.github/hooks/security/check-database-urls.sh
        language: script
        pass_filenames: false

      - id: check-api-keys
        name: Check for exposed API keys
        entry: ./.github/hooks/security/check-api-keys.sh
        language: script
        pass_filenames: false

      - id: check-jwt-secrets
        name: Check for exposed JWT secrets
        entry: ./.github/hooks/security/check-jwt-secrets.sh
        language: script
        pass_filenames: false

      - id: check-env-files
        name: Prevent .env files from being committed
        entry: ./.github/hooks/security/check-env-files.sh
        language: script
        pass_filenames: false

      - id: security-audit
        name: Comprehensive security audit
        entry: ./.github/hooks/security/security-audit.sh
        language: script
        pass_filenames: false

  # ==========================================
  # ⚠️ IMPORTANT: 防止常見低級錯誤
  # ==========================================
  - repo: local
    hooks:
      - id: prevent-db-files
        name: Prevent database files from being committed
        entry: bash -c 'git diff --cached --name-only | grep -q "\.db$" && echo "❌ Database files detected!" && exit 1 || exit 0'
        language: system
        pass_filenames: false
        always_run: true

      - id: check-test-file-location
        name: Check test files are in correct location
        entry: bash -c 'git diff --cached --name-only | grep -q "backend/scripts/test_.*\.py" && echo "⚠️ Test files should be in backend/tests/" && exit 1 || exit 0'
        language: system
        pass_filenames: false
        always_run: true

  # ==========================================
  # 📝 BASIC: 基本檔案檢查（極快）
  # ==========================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=5000']  # 放寬到 5MB
      - id: check-merge-conflict

  # ==========================================
  # 🎨 手動執行格式化（不擋 commit/push）
  # ==========================================
  # 格式化工具已移到手動執行：
  #
  # 前端格式化:
  #   npx prettier --write frontend/src
  #
  # 後端格式化:
  #   cd backend && black . && autoflake --in-place --recursive .
  #
  # 或使用 pre-commit 手動執行:
  #   pre-commit run --all-files black autoflake prettier
