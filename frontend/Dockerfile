# 多階段建置
FROM node:18-alpine AS builder

# Cache buster for production deployments
ARG BUILD_TIMESTAMP
RUN echo "Build timestamp: $BUILD_TIMESTAMP"

WORKDIR /app

# 複製 package files
COPY package*.json ./

# 安裝依賴
RUN npm ci

# 複製原始碼
COPY . .

# 建置時設定 API URL（使用 build argument）
ARG VITE_API_URL=/api
ENV VITE_API_URL=$VITE_API_URL

# TapPay 配置
ARG VITE_TAPPAY_APP_ID
ARG VITE_TAPPAY_APP_KEY
ARG VITE_TAPPAY_SERVER_TYPE
ENV VITE_TAPPAY_APP_ID=$VITE_TAPPAY_APP_ID
ENV VITE_TAPPAY_APP_KEY=$VITE_TAPPAY_APP_KEY
ENV VITE_TAPPAY_SERVER_TYPE=$VITE_TAPPAY_SERVER_TYPE

# 建置
RUN npm run build

# Production stage
FROM nginx:alpine

# 複製建置結果
COPY --from=builder /app/dist /usr/share/nginx/html

# 複製 nginx 配置模板
COPY nginx.conf.template /etc/nginx/conf.d/nginx.conf.template

# 複製啟動腳本
COPY start.sh /start.sh
RUN chmod +x /start.sh

# 移除預設的 nginx 配置
RUN rm -f /etc/nginx/conf.d/default.conf

# 暴露端口
EXPOSE 80

# 使用 ENTRYPOINT 確保腳本一定會執行
ENTRYPOINT ["/start.sh"]
