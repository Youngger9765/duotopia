{
  "name": "duotopia-tests",
  "version": "1.0.0",
  "description": "E2E and API tests for Duotopia",
  "scripts": {
    "test:api": "cd backend && pytest tests/integration/api/ -v",
    "test:api:unit": "cd backend && pytest tests/unit/ -v",
    "test:api:integration": "cd backend && pytest tests/integration/ -v",
    "test:api:e2e": "cd backend && pytest tests/e2e/ -v",
    "test:api:all": "cd backend && pytest -v",
    "test:api:coverage": "cd backend && pytest --cov=. --cov-report=html",
    "test:api:specific": "cd backend && pytest tests/integration/api/test_student_classroom_assignment.py -v",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:report": "playwright show-report",
    "test:install": "playwright install",
    "test:all": "npm run test:api:all && npm run test:e2e",
    "monitor": "chmod +x scripts/monitor-deployment.sh && ./scripts/monitor-deployment.sh",
    "monitor:staging": "chmod +x scripts/monitor-deployment.sh && ./scripts/monitor-deployment.sh staging",
    "monitor:main": "chmod +x scripts/monitor-deployment.sh && ./scripts/monitor-deployment.sh main",
    "hooks:install": "chmod +x scripts/install-hooks.sh && ./scripts/install-hooks.sh",
    "cleanup:images": "gh workflow run cleanup-resources.yml --ref $(git branch --show-current) -f keep_images=2 -f keep_revisions=1",
    "deploy:status": "gh run list --workflow=deploy-staging-supabase.yml --limit=5",
    "deploy:watch": "gh run watch $(gh run list --workflow=deploy-staging-supabase.yml --status=in_progress --limit=1 --json databaseId -q '.[0].databaseId')",
    "prepare": "husky"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0"
  }
}
