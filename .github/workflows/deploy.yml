name: Deploy to GCP

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: duotopia-469413
  REGION: asia-east1
  REPOSITORY: duotopia

jobs:
  test:
    name: Run Tests
    uses: ./.github/workflows/test.yml
    secrets: inherit

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: duotopia-cloudbuild@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
    
    - name: Build and Push Backend
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest -f backend/Dockerfile .
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest
    
    - name: Build and Push Frontend
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest -f frontend/Dockerfile .
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest
    
    - name: Deploy Backend to Cloud Run
      run: |
        gcloud run deploy duotopia-backend \
          --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars "PROJECT_ID=${{ env.PROJECT_ID }}" \
          --set-secrets "DATABASE_URL=database-url:latest,SECRET_KEY=secret-key:latest,OPENAI_API_KEY=openai-api-key:latest"
    
    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy duotopia-frontend \
          --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars "VITE_API_URL=https://duotopia-backend-xxxxx.a.run.app"

  terraform:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: duotopia-terraform@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
    
    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -out=tfplan
      env:
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
        TF_VAR_google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
        TF_VAR_google_client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        TF_VAR_sendgrid_api_key: ${{ secrets.SENDGRID_API_KEY }}
    
    - name: Terraform Apply
      if: github.event_name == 'push'
      working-directory: ./terraform
      run: terraform apply -auto-approve tfplan