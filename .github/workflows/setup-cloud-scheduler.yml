name: Setup Cloud Scheduler

# ⚠️ 只在需要時手動觸發，不會自動執行
# 使用時機：
# 1. 第一次部署 Cloud Scheduler
# 2. Cron 規則變更（時間、URL）
# 3. 環境變數更新
on:
  workflow_dispatch:  # 只允許手動觸發
    inputs:
      environment:
        description: '部署環境'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  PROJECT_ID: duotopia-472708
  REGION: asia-east1

jobs:
  setup-scheduler:
    name: 📅 Setup Cloud Scheduler
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Set Environment Variables
      id: env_vars
      run: |
        if [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
          echo "BACKEND_URL=${{ secrets.PRODUCTION_BACKEND_URL }}" >> $GITHUB_OUTPUT
          echo "CRON_SECRET=${{ secrets.PRODUCTION_CRON_SECRET }}" >> $GITHUB_OUTPUT
          echo "ENV_SUFFIX=production" >> $GITHUB_OUTPUT
        else
          echo "BACKEND_URL=${{ secrets.STAGING_BACKEND_URL }}" >> $GITHUB_OUTPUT
          echo "CRON_SECRET=${{ secrets.STAGING_CRON_SECRET }}" >> $GITHUB_OUTPUT
          echo "ENV_SUFFIX=staging" >> $GITHUB_OUTPUT
        fi

    - name: Check existing Cloud Scheduler jobs
      run: |
        echo "📋 現有的 Cloud Scheduler jobs："
        gcloud scheduler jobs list --location=${{ env.REGION }} || echo "沒有現有的 jobs"

    - name: Setup Monthly Renewal Job
      run: |
        JOB_NAME="monthly-renewal-${{ steps.env_vars.outputs.ENV_SUFFIX }}"

        echo "🗑️  刪除舊的 job（如果存在）..."
        gcloud scheduler jobs delete $JOB_NAME \
          --location=${{ env.REGION }} \
          --quiet || echo "No existing job to delete"

        echo "✨ 創建新的 monthly renewal job..."
        gcloud scheduler jobs create http $JOB_NAME \
          --location=${{ env.REGION }} \
          --schedule="0 2 1 * *" \
          --time-zone="Asia/Taipei" \
          --uri="${{ steps.env_vars.outputs.BACKEND_URL }}/api/cron/monthly-renewal" \
          --http-method=POST \
          --headers="X-Cron-Secret=${{ steps.env_vars.outputs.CRON_SECRET }},Content-Type=application/json" \
          --attempt-deadline=300s \
          --max-retry-attempts=3 \
          --description="每月 1 號凌晨 2:00 (台北時間) 執行自動續訂 - ${{ steps.env_vars.outputs.ENV_SUFFIX }}"

        echo "✅ Monthly renewal job 創建成功"

    - name: Setup Renewal Reminder Job
      run: |
        JOB_NAME="renewal-reminder-${{ steps.env_vars.outputs.ENV_SUFFIX }}"

        echo "🗑️  刪除舊的 job（如果存在）..."
        gcloud scheduler jobs delete $JOB_NAME \
          --location=${{ env.REGION }} \
          --quiet || echo "No existing job to delete"

        echo "✨ 創建新的 renewal reminder job..."
        gcloud scheduler jobs create http $JOB_NAME \
          --location=${{ env.REGION }} \
          --schedule="0 3 * * *" \
          --time-zone="Asia/Taipei" \
          --uri="${{ steps.env_vars.outputs.BACKEND_URL }}/api/cron/renewal-reminder" \
          --http-method=POST \
          --headers="X-Cron-Secret=${{ steps.env_vars.outputs.CRON_SECRET }},Content-Type=application/json" \
          --attempt-deadline=300s \
          --max-retry-attempts=3 \
          --description="每天凌晨 3:00 (台北時間) 發送到期提醒 - ${{ steps.env_vars.outputs.ENV_SUFFIX }}"

        echo "✅ Renewal reminder job 創建成功"

    - name: Setup Test Notification Job (Staging Only)
      if: github.event.inputs.environment == 'staging'
      run: |
        JOB_NAME="test-notification-staging"

        echo "🗑️  刪除舊的 test notification job（如果存在）..."
        gcloud scheduler jobs delete $JOB_NAME \
          --location=${{ env.REGION }} \
          --quiet || echo "No existing job to delete"

        echo "✨ 創建測試通知 job..."
        gcloud scheduler jobs create http $JOB_NAME \
          --location=${{ env.REGION }} \
          --schedule="0 9 * * *" \
          --time-zone="Asia/Taipei" \
          --uri="${{ steps.env_vars.outputs.BACKEND_URL }}/api/cron/test-notification" \
          --http-method=POST \
          --headers="X-Cron-Secret=${{ steps.env_vars.outputs.CRON_SECRET }},Content-Type=application/json" \
          --attempt-deadline=300s \
          --max-retry-attempts=3 \
          --description="每天早上 9:00 (台北時間) 發送測試通知到 myduotopia@gmail.com - staging only"

        echo "✅ Test notification job 創建成功"
        echo ""
        echo "📧 此 job 每天早上 9:00 會發送測試郵件到 myduotopia@gmail.com"
        echo "💡 可以透過這個測試確認 Cloud Scheduler 是否正常運作"

    - name: List all Cloud Scheduler jobs
      run: |
        echo ""
        echo "📅 所有 Cloud Scheduler jobs："
        gcloud scheduler jobs list --location=${{ env.REGION }}

        echo ""
        echo "💰 成本估算："
        if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
          echo "- Cloud Scheduler: 3 個 jobs × USD 0.10/月 = USD 0.30/月"
          echo "  - Monthly Renewal (每月 1 次)"
          echo "  - Renewal Reminder (每天 1 次)"
          echo "  - Test Notification (每天 1 次 - staging only)"
        else
          echo "- Cloud Scheduler: 2 個 jobs × USD 0.10/月 = USD 0.20/月"
          echo "  - Monthly Renewal (每月 1 次)"
          echo "  - Renewal Reminder (每天 1 次)"
        fi
        echo "- HTTP 請求成本: 免費（在 Cloud Run 免費額度內）"

    - name: Test Jobs (Staging Only)
      if: github.event.inputs.environment == 'staging'
      run: |
        echo ""
        echo "🧪 測試指令："
        echo ""
        echo "1. 測試通知 job（安全，只發送 email）："
        echo "   gcloud scheduler jobs run test-notification-staging --location=${{ env.REGION }}"
        echo ""
        echo "2. 測試 renewal reminder（安全，只發送 email）："
        echo "   gcloud scheduler jobs run renewal-reminder-staging --location=${{ env.REGION }}"
        echo ""
        echo "3. 測試 monthly renewal（⚠️ 會真的執行扣款邏輯！）："
        echo "   gcloud scheduler jobs run monthly-renewal-staging --location=${{ env.REGION }}"
        echo ""
        echo "💡 建議：先執行 test-notification 確認 Cloud Scheduler 正常運作"

    - name: Summary
      run: |
        echo ""
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "✅ Cloud Scheduler 設定完成"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "環境: ${{ steps.env_vars.outputs.ENV_SUFFIX }}"
        echo "Region: ${{ env.REGION }}"
        echo ""
        echo "📅 Job 1: monthly-renewal-${{ steps.env_vars.outputs.ENV_SUFFIX }}"
        echo "   排程: 每月 1 號凌晨 2:00 (台北時間)"
        echo "   URL: ${{ steps.env_vars.outputs.BACKEND_URL }}/api/cron/monthly-renewal"
        echo ""
        echo "📅 Job 2: renewal-reminder-${{ steps.env_vars.outputs.ENV_SUFFIX }}"
        echo "   排程: 每天凌晨 3:00 (台北時間)"
        echo "   URL: ${{ steps.env_vars.outputs.BACKEND_URL }}/api/cron/renewal-reminder"
        echo ""
        if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
          echo "📅 Job 3: test-notification-staging (僅 staging)"
          echo "   排程: 每天早上 9:00 (台北時間)"
          echo "   URL: ${{ steps.env_vars.outputs.BACKEND_URL }}/api/cron/test-notification"
          echo "   📧 會發送測試郵件到 myduotopia@gmail.com"
          echo ""
        fi
        echo "💡 下次需要更新時，請在 GitHub Actions 手動觸發此 workflow"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
