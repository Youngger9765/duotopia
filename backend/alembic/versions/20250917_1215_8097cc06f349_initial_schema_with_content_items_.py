"""initial_schema_with_content_items_redesign

Revision ID: 8097cc06f349
Revises:
Create Date: 2025-09-17 12:15:16.598420

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8097cc06f349"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "content_items",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "content_items",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(
        "content_items_content_id_order_index_key", "content_items", type_="unique"
    )
    op.drop_index("idx_content_items_content_id", table_name="content_items")
    op.drop_index("idx_content_items_order", table_name="content_items")
    op.create_unique_constraint(
        "_content_item_order_uc", "content_items", ["content_id", "order_index"]
    )
    op.create_index(op.f("ix_content_items_id"), "content_items", ["id"], unique=False)
    op.alter_column(
        "student_item_progress",
        "submitted_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "student_item_progress",
        "ai_assessed_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "student_item_progress",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "student_item_progress",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(
        "idx_student_item_progress_assignment", table_name="student_item_progress"
    )
    op.drop_index("idx_student_item_progress_item", table_name="student_item_progress")
    op.drop_index(
        "idx_student_item_progress_status", table_name="student_item_progress"
    )
    op.drop_constraint(
        "student_item_progress_student_assignment_id_content_item_id_key",
        "student_item_progress",
        type_="unique",
    )
    op.create_unique_constraint(
        "_student_item_progress_uc",
        "student_item_progress",
        ["student_assignment_id", "content_item_id"],
    )
    op.create_index(
        op.f("ix_student_item_progress_id"),
        "student_item_progress",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_student_item_progress_id"), table_name="student_item_progress"
    )
    op.drop_constraint(
        "_student_item_progress_uc", "student_item_progress", type_="unique"
    )
    op.create_unique_constraint(
        "student_item_progress_student_assignment_id_content_item_id_key",
        "student_item_progress",
        ["student_assignment_id", "content_item_id"],
    )
    op.create_index(
        "idx_student_item_progress_status",
        "student_item_progress",
        ["status"],
        unique=False,
    )
    op.create_index(
        "idx_student_item_progress_item",
        "student_item_progress",
        ["content_item_id"],
        unique=False,
    )
    op.create_index(
        "idx_student_item_progress_assignment",
        "student_item_progress",
        ["student_assignment_id"],
        unique=False,
    )
    op.alter_column(
        "student_item_progress",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "student_item_progress",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "student_item_progress",
        "ai_assessed_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "student_item_progress",
        "submitted_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.drop_index(op.f("ix_content_items_id"), table_name="content_items")
    op.drop_constraint("_content_item_order_uc", "content_items", type_="unique")
    op.create_index(
        "idx_content_items_order",
        "content_items",
        ["content_id", "order_index"],
        unique=False,
    )
    op.create_index(
        "idx_content_items_content_id", "content_items", ["content_id"], unique=False
    )
    op.create_unique_constraint(
        "content_items_content_id_order_index_key",
        "content_items",
        ["content_id", "order_index"],
    )
    op.alter_column(
        "content_items",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "content_items",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###
