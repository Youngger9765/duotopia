"""Add phone field to users table

Revision ID: e0055dfe140b
Revises: 961527981c89
Create Date: 2025-08-20 01:20:15.041815

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e0055dfe140b'
down_revision: Union[str, None] = '961527981c89'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_institution_roles_active', table_name='user_institution_roles')
    op.drop_index('idx_user_institution_roles_institution', table_name='user_institution_roles')
    op.drop_index('idx_user_institution_roles_user', table_name='user_institution_roles')
    op.drop_table('user_institution_roles')
    op.add_column('users', sa.Column('phone', sa.String(), nullable=True))
    op.drop_column('users', 'platform_role')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('platform_role', sa.VARCHAR(), server_default=sa.text("'platform_user'::character varying"), autoincrement=False, nullable=True))
    op.drop_column('users', 'phone')
    op.create_table('user_institution_roles',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('institution_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('roles', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='fk_user_institution_roles_creator'),
    sa.ForeignKeyConstraint(['institution_id'], ['schools.id'], name='fk_user_institution_roles_institution', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user_institution_roles_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_institution_roles_pkey'),
    sa.UniqueConstraint('user_id', 'institution_id', name='user_institution_roles_user_id_institution_id_key')
    )
    op.create_index('idx_user_institution_roles_user', 'user_institution_roles', ['user_id'], unique=False)
    op.create_index('idx_user_institution_roles_institution', 'user_institution_roles', ['institution_id'], unique=False)
    op.create_index('idx_user_institution_roles_active', 'user_institution_roles', ['user_id', 'institution_id', 'is_active'], unique=False)
    # ### end Alembic commands ###
